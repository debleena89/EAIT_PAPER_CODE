\section{Illustrative examples} \label{sec5}

In this section we illustrate our approach considering the example given in Fig.2.
Three control applications are sharing the bus , only the bus accessing states are represented in 
the diagram. According to the steps given in the solution architecture section we constructed the automaton.
Here we have 6 states competing for the bus access from three control applications. If we choose the length
of the control schedule length to be $3$ then we have $6^3 = 216$ number of sequneces. The way the tree can be
formed is depicted in the Fig.6

\begin{figure}[h]
\begin{center}
\includegraphics[width=20mm]{tree_state.pdf}
\end{center}
\vspace{-0.1in}
\caption{{\em Control Loops sharing bus}}
\label{fig:automaton}
\end{figure}

The leaf nodes represents the state for the B\"{u}chi automaton. Each path of the tree 
represents one possible scheduling sequence. The leaf node represents the sequence when they
take part in B\"{u}chi automaton construction. The next step is the construction of
B\"{u}chi automaton. With all leaf nodes, all possible transitions are added and the newly
formed state is matched with all other states including itself. If any matches found, those
transitions are added for the finite state machine.

After construction of the automata the next step is to find out at least one cycle 
from the automaton which contains at least one state from each control application. If the 
expected result is not met we can say the code replacement attack can happen.
